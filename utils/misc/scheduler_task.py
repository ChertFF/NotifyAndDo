import asyncio
import datetime
import logging
from loader import bot
import aioschedule
import aiogram.utils.markdown as fmt
from utils.db_api.schemas.user import Task


async def send_reminder():
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
    today = datetime.date.today()
    tasks = await Task.query.where((Task.status != '–ó–∞–≤–µ—Ä—à–µ–Ω–∞') & (Task.notification_date == today)).order_by(
        Task.deadline.asc()).gino.all()

    print(tasks)

    for task in tasks:
        try:
            Send = (f"{fmt.hbold('üî∏ –ù–∞–ø–æ–º–∏–Ω–∞—é –æ –∑–∞–¥–∞—á–µ üî∏')}\n\n"
                    f"{fmt.hbold('üìù –ù–∞–∑–≤–∞–Ω–∏–µ: ')}{task.name}\n"
                    f"{fmt.hbold('üìå –û–ø–∏—Å–∞–Ω–∏–µ: ')}{task.description}\n"
                    f"{fmt.hbold('üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: ')}{task.responsible}\n\n"
                    f"{fmt.hbold('üìÖ –°—Ä–æ–∫ —Ä–µ—à–µ–Ω–∏—è: ')}{task.deadline}\n"
                    f"{fmt.hbold('üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ')}{task.notification_date}")
            await bot.send_message(task.chat_id, Send)
            logging.warning(
                f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ {task.id} –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {task.chat_id}')
            await asyncio.sleep(0.27)
        except:
            logging.warning(
                f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–¥–∞—á–µ {task.id} –±—ã–ª–æ –ù–ï –ë–´–õ–û –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {task.chat_id}')
            await asyncio.sleep(0.27)

    tasks_after_deadline = await Task.query.where((Task.status != '–ó–∞–≤–µ—Ä—à–µ–Ω–∞') & (Task.deadline < today)).order_by(
        Task.deadline.asc()).gino.all()

    for task in tasks_after_deadline:
        try:
            Send = (f"{fmt.hbold('üîª –ó–∞–¥–∞—á–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ üîª')}\n\n"
                    f"{fmt.hbold('üìù –ù–∞–∑–≤–∞–Ω–∏–µ: ')}{task.name}\n"
                    f"{fmt.hbold('üìå –û–ø–∏—Å–∞–Ω–∏–µ: ')}{task.description}\n"
                    f"{fmt.hbold('üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: ')}{task.responsible}\n\n"
                    f"{fmt.hbold('üìÖ –°—Ä–æ–∫ —Ä–µ—à–µ–Ω–∏—è: ')}{task.deadline}\n")
            await bot.send_message(task.chat_id, Send)
            logging.warning(
                f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ {task.id} –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {task.chat_id}')
            await asyncio.sleep(0.27)
        except:
            logging.warning(
                f'–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ {task.id} –±—ã–ª–æ –ù–ï –ë–´–õ–û –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {task.chat_id}')
            await asyncio.sleep(0.27)


async def scheduler_tasks():
    aioschedule.every().day.at("00:05").do(send_reminder)
    while True:
        await aioschedule.run_pending()
        await asyncio.sleep(5)